Now with the React memo and shouldComponentUpdate, it would be kind of logical to basically add either of the two to any component you're creating, every functional component could be wrapped with React memo and every class-based component could implement shouldComponentUpdate. Is that wise? Now this might sound like a good idea but it actually isn't. You will have components that will basically always update when their parent updates. In such cases where you depend on some input from your parent component, that is about the only data your parent component manages and therefore when your parent component updates, you will also have to update because then that data changed. In such cases if you implement shouldComponentUpdate or React memo, then these functions will run and will check whether the input changed and they will find out yes it changed like it always does and they will allow you to re-render. So all good, right? You didn't stop anything from happening. Well but you executed this unnecessary code. This check here of course doesn't come for free. It's not a super performance heavy check but still, it is code that executes and if you wrap all your components with such checks and let's say 60% of your components actually always need to update when their parent updates, well if you then wrapped all your components with these extra checks, then you're running unnecessary checks on 60% of your component codebase and that is not really something you want to do. So you should evaluate this carefully, is this component part of a parent component that could change related to something that does not affect me at all, as it is the case here where the persons component is certainly not interested in changes related to the cockpit, well then you should implement your check here. Otherwise if you're pretty sure that in all or almost all cases where your parent updates, you will need to update too, then you should not add shouldComponentUpdate or React memo because you will just execute some extra logic that makes no sense and actually just slows down the application a tiny bit.
TIẾNG VIỆT
Bây giờ với React.memo và ShouldComponentUpdate, về cơ bản, việc thêm một trong hai thành phần này vào bất kỳ component nào bạn tạo ra, mọi functional components đều có thể được wrap React.memo và mọi class-based component có thể thực hiện shouldComponentUpdate. Có khôn ngoan không? Bây giờ điều này có vẻ như là một ý tưởng tốt nhưng thực tế không phải vậy. Bạn sẽ có các thành phần về cơ bản sẽ luôn cập nhật khi cha mẹ của chúng cập nhật. Trong các trường hợp như vậy khi bạn phụ thuộc vào một số đầu vào từ thành phần cha mẹ, đó là về dữ liệu duy nhất mà thành phần cha mẹ của bạn quản lý và do đó khi thành phần cha mẹ của bạn cập nhật, bạn cũng sẽ phải cập nhật vì sau đó dữ liệu đó đã thay đổi. Trong những trường hợp như vậy nếu bạn triển khai shouldComponentUpdate hoặc React.memo, thì các chức năng này sẽ chạy và sẽ kiểm tra xem đầu vào có thay đổi hay không và chúng sẽ tìm ra có thay đổi như mọi khi và chúng sẽ cho phép bạn render lại. Vậy tất cả đều tốt, phải không? Bạn đã không ngăn chặn bất cứ điều gì xảy ra. Vâng, nhưng bạn đã thực thi mã không cần thiết này. Kiểm tra này ở đây tất nhiên không đến miễn phí. Đây không phải là một kiểm tra cực kỳ hiệu năng cao nhưng vẫn là mã thực thi và nếu bạn bọc tất cả các thành phần của mình bằng các kiểm tra đó và giả sử 60% các thành phần của bạn thực sự luôn cần cập nhật khi cha mẹ cập nhật, nếu bạn đã wrap tất cả các thành phần có các kiểm tra bổ sung này, sau đó bạn đang chạy các kiểm tra không cần thiết trên 60% cơ sở mã thành phần của bạn và đó không thực sự là điều bạn muốn làm. Vì vậy, bạn nên đánh giá điều này một cách cẩn thận, đây có phải là thành phần của thành phần cha mẹ có thể thay đổi liên quan đến điều gì đó không ảnh hưởng đến tôi không, vì đây là trường hợp thành phần người chắc chắn không quan tâm đến những thay đổi liên quan đến buồng lái, tốt, sau đó bạn nên thực hiện kiểm tra của bạn ở đây. Mặt khác, nếu bạn khá chắc chắn rằng trong tất cả hoặc gần như tất cả các trường hợp cha mẹ cập nhật, bạn cũng sẽ cần cập nhật, thì bạn không nên thêm shouldComponentUpdate hoặc React.memo vì bạn sẽ thực hiện một số logic bổ sung vô nghĩa và thực sự chỉ là làm chậm ứng dụng một chút